Terminals unused in grammar

   ERROR
   CMERROR


State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: dcl_list

    2 dcl_list: dcl_list dcl
    3         | dcl

    4 dcl: var_dcl
    5    | func_dcl

    6 $@1: %empty

    7 var_dcl: type_spc ID $@1 SEMICOLON

    8 $@2: %empty

    9 $@3: %empty

   10 var_dcl: type_spc ID $@2 LSQBRKT NUM $@3 RSQBRKT SEMICOLON

   11 type_spc: INT
   12         | VOID

   13 $@4: %empty

   14 func_dcl: type_spc ID $@4 LPAREN params RPAREN comp_stmt

   15 params: param_list
   16       | VOID

   17 param_list: param_list COLON param
   18           | param

   19 param: type_spc ID

   20 $@5: %empty

   21 param: type_spc ID $@5 LSQBRKT RSQBRKT

   22 comp_stmt: LBRACE local_dcls stmt_list RBRACE

   23 local_dcls: local_dcls var_dcl
   24           | %empty

   25 stmt_list: stmt_list stmt
   26          | %empty

   27 stmt: exp_stmt
   28     | comp_stmt
   29     | sel_stmt
   30     | iter_stmt
   31     | ret_stmt

   32 exp_stmt: exp SEMICOLON
   33         | SEMICOLON

   34 sel_stmt: IF LPAREN exp RPAREN stmt
   35         | IF LPAREN exp RPAREN stmt ELSE stmt

   36 iter_stmt: WHILE LPAREN exp RPAREN stmt

   37 ret_stmt: RETURN SEMICOLON
   38         | RETURN exp SEMICOLON

   39 exp: var ASSIGN exp
   40    | simple_exp

   41 var: ID

   42 $@6: %empty

   43 var: ID $@6 LSQBRKT exp RSQBRKT

   44 simple_exp: add_exp EQ add_exp
   45           | add_exp NE add_exp
   46           | add_exp LE add_exp
   47           | add_exp LT add_exp
   48           | add_exp GE add_exp
   49           | add_exp GT add_exp
   50           | add_exp

   51 add_exp: add_exp PLUS term
   52        | add_exp MINUS term
   53        | term

   54 term: term TIMES factor
   55     | term OVER factor
   56     | factor

   57 factor: LPAREN exp RPAREN
   58       | call
   59       | var
   60       | NUM

   61 $@7: %empty

   62 call: ID $@7 LPAREN args RPAREN

   63 args: arg_list
   64     | %empty

   65 arg_list: arg_list COLON exp
   66         | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 34 35
ELSE (259) 35
INT (260) 11
RETURN (261) 37 38
VOID (262) 12 16
WHILE (263) 36
ID (264) 7 10 14 19 21 41 43 62
NUM (265) 10 60
EQ (266) 44
NE (267) 45
LE (268) 46
LT (269) 47
GE (270) 48
GT (271) 49
PLUS (272) 51
MINUS (273) 52
TIMES (274) 54
OVER (275) 55
ASSIGN (276) 39
SEMICOLON (277) 7 10 32 33 37 38
COLON (278) 17 65
LPAREN (279) 14 34 35 36 57 62
RPAREN (280) 14 34 35 36 57 62
LSQBRKT (281) 10 21 43
RSQBRKT (282) 10 21 43
LBRACE (283) 22
RBRACE (284) 22
ERROR (285)
CMERROR (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
dcl_list (34)
    on left: 2 3, on right: 1 2
dcl (35)
    on left: 4 5, on right: 2 3
var_dcl (36)
    on left: 7 10, on right: 4 23
$@1 (37)
    on left: 6, on right: 7
$@2 (38)
    on left: 8, on right: 10
$@3 (39)
    on left: 9, on right: 10
type_spc (40)
    on left: 11 12, on right: 7 10 14 19 21
func_dcl (41)
    on left: 14, on right: 5
$@4 (42)
    on left: 13, on right: 14
params (43)
    on left: 15 16, on right: 14
param_list (44)
    on left: 17 18, on right: 15 17
param (45)
    on left: 19 21, on right: 17 18
$@5 (46)
    on left: 20, on right: 21
comp_stmt (47)
    on left: 22, on right: 14 28
local_dcls (48)
    on left: 23 24, on right: 22 23
stmt_list (49)
    on left: 25 26, on right: 22 25
stmt (50)
    on left: 27 28 29 30 31, on right: 25 34 35 36
exp_stmt (51)
    on left: 32 33, on right: 27
sel_stmt (52)
    on left: 34 35, on right: 29
iter_stmt (53)
    on left: 36, on right: 30
ret_stmt (54)
    on left: 37 38, on right: 31
exp (55)
    on left: 39 40, on right: 32 34 35 36 38 39 43 57 65 66
var (56)
    on left: 41 43, on right: 39 59
$@6 (57)
    on left: 42, on right: 43
simple_exp (58)
    on left: 44 45 46 47 48 49 50, on right: 40
add_exp (59)
    on left: 51 52 53, on right: 44 45 46 47 48 49 50 51 52
term (60)
    on left: 54 55 56, on right: 51 52 53 54 55
factor (61)
    on left: 57 58 59 60, on right: 54 55 56
call (62)
    on left: 62, on right: 58
$@7 (63)
    on left: 61, on right: 62
args (64)
    on left: 63 64, on right: 62
arg_list (65)
    on left: 65 66, on right: 63 65


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program   go to state 3
    dcl_list  go to state 4
    dcl       go to state 5
    var_dcl   go to state 6
    type_spc  go to state 7
    func_dcl  go to state 8


State 1

   11 type_spc: INT .

    $default  reduce using rule 11 (type_spc)


State 2

   12 type_spc: VOID .

    $default  reduce using rule 12 (type_spc)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: dcl_list .
    2 dcl_list: dcl_list . dcl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    dcl       go to state 10
    var_dcl   go to state 6
    type_spc  go to state 7
    func_dcl  go to state 8


State 5

    3 dcl_list: dcl .

    $default  reduce using rule 3 (dcl_list)


State 6

    4 dcl: var_dcl .

    $default  reduce using rule 4 (dcl)


State 7

    7 var_dcl: type_spc . ID $@1 SEMICOLON
   10        | type_spc . ID $@2 LSQBRKT NUM $@3 RSQBRKT SEMICOLON
   14 func_dcl: type_spc . ID $@4 LPAREN params RPAREN comp_stmt

    ID  shift, and go to state 11


State 8

    5 dcl: func_dcl .

    $default  reduce using rule 5 (dcl)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 dcl_list: dcl_list dcl .

    $default  reduce using rule 2 (dcl_list)


State 11

    7 var_dcl: type_spc ID . $@1 SEMICOLON
   10        | type_spc ID . $@2 LSQBRKT NUM $@3 RSQBRKT SEMICOLON
   14 func_dcl: type_spc ID . $@4 LPAREN params RPAREN comp_stmt

    LPAREN    reduce using rule 13 ($@4)
    LSQBRKT   reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13
    $@4  go to state 14


State 12

    7 var_dcl: type_spc ID $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 13

   10 var_dcl: type_spc ID $@2 . LSQBRKT NUM $@3 RSQBRKT SEMICOLON

    LSQBRKT  shift, and go to state 16


State 14

   14 func_dcl: type_spc ID $@4 . LPAREN params RPAREN comp_stmt

    LPAREN  shift, and go to state 17


State 15

    7 var_dcl: type_spc ID $@1 SEMICOLON .

    $default  reduce using rule 7 (var_dcl)


State 16

   10 var_dcl: type_spc ID $@2 LSQBRKT . NUM $@3 RSQBRKT SEMICOLON

    NUM  shift, and go to state 18


State 17

   14 func_dcl: type_spc ID $@4 LPAREN . params RPAREN comp_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 19

    type_spc    go to state 20
    params      go to state 21
    param_list  go to state 22
    param       go to state 23


State 18

   10 var_dcl: type_spc ID $@2 LSQBRKT NUM . $@3 RSQBRKT SEMICOLON

    $default  reduce using rule 9 ($@3)

    $@3  go to state 24


State 19

   12 type_spc: VOID .
   16 params: VOID .

    RPAREN    reduce using rule 16 (params)
    $default  reduce using rule 12 (type_spc)


State 20

   19 param: type_spc . ID
   21      | type_spc . ID $@5 LSQBRKT RSQBRKT

    ID  shift, and go to state 25


State 21

   14 func_dcl: type_spc ID $@4 LPAREN params . RPAREN comp_stmt

    RPAREN  shift, and go to state 26


State 22

   15 params: param_list .
   17 param_list: param_list . COLON param

    COLON  shift, and go to state 27

    $default  reduce using rule 15 (params)


State 23

   18 param_list: param .

    $default  reduce using rule 18 (param_list)


State 24

   10 var_dcl: type_spc ID $@2 LSQBRKT NUM $@3 . RSQBRKT SEMICOLON

    RSQBRKT  shift, and go to state 28


State 25

   19 param: type_spc ID .
   21      | type_spc ID . $@5 LSQBRKT RSQBRKT

    LSQBRKT   reduce using rule 20 ($@5)
    $default  reduce using rule 19 (param)

    $@5  go to state 29


State 26

   14 func_dcl: type_spc ID $@4 LPAREN params RPAREN . comp_stmt

    LBRACE  shift, and go to state 30

    comp_stmt  go to state 31


State 27

   17 param_list: param_list COLON . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_spc  go to state 20
    param     go to state 32


State 28

   10 var_dcl: type_spc ID $@2 LSQBRKT NUM $@3 RSQBRKT . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 29

   21 param: type_spc ID $@5 . LSQBRKT RSQBRKT

    LSQBRKT  shift, and go to state 34


State 30

   22 comp_stmt: LBRACE . local_dcls stmt_list RBRACE

    $default  reduce using rule 24 (local_dcls)

    local_dcls  go to state 35


State 31

   14 func_dcl: type_spc ID $@4 LPAREN params RPAREN comp_stmt .

    $default  reduce using rule 14 (func_dcl)


State 32

   17 param_list: param_list COLON param .

    $default  reduce using rule 17 (param_list)


State 33

   10 var_dcl: type_spc ID $@2 LSQBRKT NUM $@3 RSQBRKT SEMICOLON .

    $default  reduce using rule 10 (var_dcl)


State 34

   21 param: type_spc ID $@5 LSQBRKT . RSQBRKT

    RSQBRKT  shift, and go to state 36


State 35

   22 comp_stmt: LBRACE local_dcls . stmt_list RBRACE
   23 local_dcls: local_dcls . var_dcl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 26 (stmt_list)

    var_dcl    go to state 37
    type_spc   go to state 38
    stmt_list  go to state 39


State 36

   21 param: type_spc ID $@5 LSQBRKT RSQBRKT .

    $default  reduce using rule 21 (param)


State 37

   23 local_dcls: local_dcls var_dcl .

    $default  reduce using rule 23 (local_dcls)


State 38

    7 var_dcl: type_spc . ID $@1 SEMICOLON
   10        | type_spc . ID $@2 LSQBRKT NUM $@3 RSQBRKT SEMICOLON

    ID  shift, and go to state 40


State 39

   22 comp_stmt: LBRACE local_dcls stmt_list . RBRACE
   25 stmt_list: stmt_list . stmt

    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    LPAREN     shift, and go to state 47
    LBRACE     shift, and go to state 30
    RBRACE     shift, and go to state 48

    comp_stmt   go to state 49
    stmt        go to state 50
    exp_stmt    go to state 51
    sel_stmt    go to state 52
    iter_stmt   go to state 53
    ret_stmt    go to state 54
    exp         go to state 55
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 40

    7 var_dcl: type_spc ID . $@1 SEMICOLON
   10        | type_spc ID . $@2 LSQBRKT NUM $@3 RSQBRKT SEMICOLON

    LSQBRKT   reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13


State 41

   34 sel_stmt: IF . LPAREN exp RPAREN stmt
   35         | IF . LPAREN exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 62


State 42

   37 ret_stmt: RETURN . SEMICOLON
   38         | RETURN . exp SEMICOLON

    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    SEMICOLON  shift, and go to state 63
    LPAREN     shift, and go to state 47

    exp         go to state 64
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 43

   36 iter_stmt: WHILE . LPAREN exp RPAREN stmt

    LPAREN  shift, and go to state 65


State 44

   41 var: ID .
   43    | ID . $@6 LSQBRKT exp RSQBRKT
   62 call: ID . $@7 LPAREN args RPAREN

    LPAREN    reduce using rule 61 ($@7)
    LSQBRKT   reduce using rule 42 ($@6)
    $default  reduce using rule 41 (var)

    $@6  go to state 66
    $@7  go to state 67


State 45

   60 factor: NUM .

    $default  reduce using rule 60 (factor)


State 46

   33 exp_stmt: SEMICOLON .

    $default  reduce using rule 33 (exp_stmt)


State 47

   57 factor: LPAREN . exp RPAREN

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    exp         go to state 68
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 48

   22 comp_stmt: LBRACE local_dcls stmt_list RBRACE .

    $default  reduce using rule 22 (comp_stmt)


State 49

   28 stmt: comp_stmt .

    $default  reduce using rule 28 (stmt)


State 50

   25 stmt_list: stmt_list stmt .

    $default  reduce using rule 25 (stmt_list)


State 51

   27 stmt: exp_stmt .

    $default  reduce using rule 27 (stmt)


State 52

   29 stmt: sel_stmt .

    $default  reduce using rule 29 (stmt)


State 53

   30 stmt: iter_stmt .

    $default  reduce using rule 30 (stmt)


State 54

   31 stmt: ret_stmt .

    $default  reduce using rule 31 (stmt)


State 55

   32 exp_stmt: exp . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 56

   39 exp: var . ASSIGN exp
   59 factor: var .

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 59 (factor)


State 57

   40 exp: simple_exp .

    $default  reduce using rule 40 (exp)


State 58

   44 simple_exp: add_exp . EQ add_exp
   45           | add_exp . NE add_exp
   46           | add_exp . LE add_exp
   47           | add_exp . LT add_exp
   48           | add_exp . GE add_exp
   49           | add_exp . GT add_exp
   50           | add_exp .
   51 add_exp: add_exp . PLUS term
   52        | add_exp . MINUS term

    EQ     shift, and go to state 71
    NE     shift, and go to state 72
    LE     shift, and go to state 73
    LT     shift, and go to state 74
    GE     shift, and go to state 75
    GT     shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 50 (simple_exp)


State 59

   53 add_exp: term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 53 (add_exp)


State 60

   56 term: factor .

    $default  reduce using rule 56 (term)


State 61

   58 factor: call .

    $default  reduce using rule 58 (factor)


State 62

   34 sel_stmt: IF LPAREN . exp RPAREN stmt
   35         | IF LPAREN . exp RPAREN stmt ELSE stmt

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    exp         go to state 81
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 63

   37 ret_stmt: RETURN SEMICOLON .

    $default  reduce using rule 37 (ret_stmt)


State 64

   38 ret_stmt: RETURN exp . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 65

   36 iter_stmt: WHILE LPAREN . exp RPAREN stmt

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    exp         go to state 83
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 66

   43 var: ID $@6 . LSQBRKT exp RSQBRKT

    LSQBRKT  shift, and go to state 84


State 67

   62 call: ID $@7 . LPAREN args RPAREN

    LPAREN  shift, and go to state 85


State 68

   57 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 86


State 69

   32 exp_stmt: exp SEMICOLON .

    $default  reduce using rule 32 (exp_stmt)


State 70

   39 exp: var ASSIGN . exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    exp         go to state 87
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 71

   44 simple_exp: add_exp EQ . add_exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var      go to state 88
    add_exp  go to state 89
    term     go to state 59
    factor   go to state 60
    call     go to state 61


State 72

   45 simple_exp: add_exp NE . add_exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var      go to state 88
    add_exp  go to state 90
    term     go to state 59
    factor   go to state 60
    call     go to state 61


State 73

   46 simple_exp: add_exp LE . add_exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var      go to state 88
    add_exp  go to state 91
    term     go to state 59
    factor   go to state 60
    call     go to state 61


State 74

   47 simple_exp: add_exp LT . add_exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var      go to state 88
    add_exp  go to state 92
    term     go to state 59
    factor   go to state 60
    call     go to state 61


State 75

   48 simple_exp: add_exp GE . add_exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var      go to state 88
    add_exp  go to state 93
    term     go to state 59
    factor   go to state 60
    call     go to state 61


State 76

   49 simple_exp: add_exp GT . add_exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var      go to state 88
    add_exp  go to state 94
    term     go to state 59
    factor   go to state 60
    call     go to state 61


State 77

   51 add_exp: add_exp PLUS . term

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var     go to state 88
    term    go to state 95
    factor  go to state 60
    call    go to state 61


State 78

   52 add_exp: add_exp MINUS . term

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var     go to state 88
    term    go to state 96
    factor  go to state 60
    call    go to state 61


State 79

   54 term: term TIMES . factor

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var     go to state 88
    factor  go to state 97
    call    go to state 61


State 80

   55 term: term OVER . factor

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var     go to state 88
    factor  go to state 98
    call    go to state 61


State 81

   34 sel_stmt: IF LPAREN exp . RPAREN stmt
   35         | IF LPAREN exp . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 99


State 82

   38 ret_stmt: RETURN exp SEMICOLON .

    $default  reduce using rule 38 (ret_stmt)


State 83

   36 iter_stmt: WHILE LPAREN exp . RPAREN stmt

    RPAREN  shift, and go to state 100


State 84

   43 var: ID $@6 LSQBRKT . exp RSQBRKT

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    exp         go to state 101
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 85

   62 call: ID $@7 LPAREN . args RPAREN

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    $default  reduce using rule 64 (args)

    exp         go to state 102
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61
    args        go to state 103
    arg_list    go to state 104


State 86

   57 factor: LPAREN exp RPAREN .

    $default  reduce using rule 57 (factor)


State 87

   39 exp: var ASSIGN exp .

    $default  reduce using rule 39 (exp)


State 88

   59 factor: var .

    $default  reduce using rule 59 (factor)


State 89

   44 simple_exp: add_exp EQ add_exp .
   51 add_exp: add_exp . PLUS term
   52        | add_exp . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 44 (simple_exp)


State 90

   45 simple_exp: add_exp NE add_exp .
   51 add_exp: add_exp . PLUS term
   52        | add_exp . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 45 (simple_exp)


State 91

   46 simple_exp: add_exp LE add_exp .
   51 add_exp: add_exp . PLUS term
   52        | add_exp . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 46 (simple_exp)


State 92

   47 simple_exp: add_exp LT add_exp .
   51 add_exp: add_exp . PLUS term
   52        | add_exp . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 47 (simple_exp)


State 93

   48 simple_exp: add_exp GE add_exp .
   51 add_exp: add_exp . PLUS term
   52        | add_exp . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 48 (simple_exp)


State 94

   49 simple_exp: add_exp GT add_exp .
   51 add_exp: add_exp . PLUS term
   52        | add_exp . MINUS term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 49 (simple_exp)


State 95

   51 add_exp: add_exp PLUS term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 51 (add_exp)


State 96

   52 add_exp: add_exp MINUS term .
   54 term: term . TIMES factor
   55     | term . OVER factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 52 (add_exp)


State 97

   54 term: term TIMES factor .

    $default  reduce using rule 54 (term)


State 98

   55 term: term OVER factor .

    $default  reduce using rule 55 (term)


State 99

   34 sel_stmt: IF LPAREN exp RPAREN . stmt
   35         | IF LPAREN exp RPAREN . stmt ELSE stmt

    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    LPAREN     shift, and go to state 47
    LBRACE     shift, and go to state 30

    comp_stmt   go to state 49
    stmt        go to state 105
    exp_stmt    go to state 51
    sel_stmt    go to state 52
    iter_stmt   go to state 53
    ret_stmt    go to state 54
    exp         go to state 55
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 100

   36 iter_stmt: WHILE LPAREN exp RPAREN . stmt

    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    LPAREN     shift, and go to state 47
    LBRACE     shift, and go to state 30

    comp_stmt   go to state 49
    stmt        go to state 106
    exp_stmt    go to state 51
    sel_stmt    go to state 52
    iter_stmt   go to state 53
    ret_stmt    go to state 54
    exp         go to state 55
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 101

   43 var: ID $@6 LSQBRKT exp . RSQBRKT

    RSQBRKT  shift, and go to state 107


State 102

   66 arg_list: exp .

    $default  reduce using rule 66 (arg_list)


State 103

   62 call: ID $@7 LPAREN args . RPAREN

    RPAREN  shift, and go to state 108


State 104

   63 args: arg_list .
   65 arg_list: arg_list . COLON exp

    COLON  shift, and go to state 109

    $default  reduce using rule 63 (args)


State 105

   34 sel_stmt: IF LPAREN exp RPAREN stmt .
   35         | IF LPAREN exp RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 110

    ELSE      [reduce using rule 34 (sel_stmt)]
    $default  reduce using rule 34 (sel_stmt)


State 106

   36 iter_stmt: WHILE LPAREN exp RPAREN stmt .

    $default  reduce using rule 36 (iter_stmt)


State 107

   43 var: ID $@6 LSQBRKT exp RSQBRKT .

    $default  reduce using rule 43 (var)


State 108

   62 call: ID $@7 LPAREN args RPAREN .

    $default  reduce using rule 62 (call)


State 109

   65 arg_list: arg_list COLON . exp

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    exp         go to state 111
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 110

   35 sel_stmt: IF LPAREN exp RPAREN stmt ELSE . stmt

    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    LPAREN     shift, and go to state 47
    LBRACE     shift, and go to state 30

    comp_stmt   go to state 49
    stmt        go to state 112
    exp_stmt    go to state 51
    sel_stmt    go to state 52
    iter_stmt   go to state 53
    ret_stmt    go to state 54
    exp         go to state 55
    var         go to state 56
    simple_exp  go to state 57
    add_exp     go to state 58
    term        go to state 59
    factor      go to state 60
    call        go to state 61


State 111

   65 arg_list: arg_list COLON exp .

    $default  reduce using rule 65 (arg_list)


State 112

   35 sel_stmt: IF LPAREN exp RPAREN stmt ELSE stmt .

    $default  reduce using rule 35 (sel_stmt)
